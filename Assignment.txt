1.What is JavaScript?
Ans.
   JavaScript is a client-side programming language used to create dynamic interactions in app, game and web development.
   Commonly represented as JS, this language is considered one of the core technologies of the web in conjunction with HTML and CSS.


2.What is the use of isNaN function?
Ans.
   The isNaN() function determines whether a value is NaN when converted to a number. Because coercion inside 
   the isNaN() function can be surprising, you may alternatively want to use Number.isNaN().

Example:-
       JavaScript Demo: Standard built-in objects - isNaN()

function milliseconds(x) {
  if (isNaN(x)) {
    return 'Not a Number!';
  }
  return x * 1000;
}

console.log(milliseconds('100F'));
// Expected output: "Not a Number!"

console.log(milliseconds('0.0314E+2'));
// Expected output: 3140


3.What is negative Infinity? 
Ans.
    NEGATIVE_INFINITY is a special numeric value that is returned when an arithmetic operation or mathematical function
    generates a negative value greater than the largest representable number in JavaScript 
    (i.e., more negative than -Number. MAX_VALUE) . 

    JavaScript displays the NEGATIVE_INFINITY value as -Infinity . 

4.Which company developed JavaScript?
Ans.
    JavaScript was invented by Brendan Eich in 1995. It was developed for Netscape 2, and became the ECMA-262 standard in 1997.
    After Netscape handed JavaScript over to ECMA, the Mozilla foundation continued to develop JavaScript for the Firefox browser.

5.What are undeclared and undefined variables?
Ans.
    Undeclared variables are those that have not been declared or defined in the current scope,
    while undefined variables are those that have been declared but not given a value.
Example.
   ReferenceError: x is not defined (V8-based)
   ReferenceError: assignment to undeclared variable x (Firefox)
   ReferenceError: Can't find variable: x (Safari)

6.Write the code for adding new elements dynamically?
Ans.
    The createElement() method in JavaScript can be used to create new items dynamically.
    The setAttribute() method is used to set the attributes of the newly generated element.
    By clicking a button, a modal box appears and collects the required information dynamically.

Example.
        <html>
        <title>
              Adding new elements dynamically
        </title>

<body>
    <button id="button">Hit me to add elements dynamically</button>
    <h3 id="heading_A"></h3>
    <h5 id="alert"></h5>
    <script>
        const button = document.getElementById('button');
        const text = document.getElementById('heading_A');
        const alrt = document.getElementById('alert');
        button.onclick = () => {
            const name = prompt('What is your name?');
            const course = prompt('Which Course we are learning ?');
            alert(`Hello ${name}, Welcome to our group...!`+ "\n" + `We are learning ${course}`);
            text.textContent = `Welcome ${name}to our group...!` + `We are learning ${course}`;
           alert(button.textContent);
           text.textContent = `Welcome ${name}to our group...!` + `We are learning ${course}`;

      }
    </script>
</body>

</html>

7.What is the difference between ViewState and SessionState?
Ans.
   > Session state is saved on the server.
 Session state is usually cleared after a period of inactivity from the user (no request happened containing the session id in the request cookies).  
   > ViewState is saved in the page.
 The view state is posted on subsequent post back in a hidden field.


8.What is === operator?
Ans.
    The strict equality (===) operator checks whether its two operands are equal, returning a Boolean result. 
    Unlike the equality operator, the strict equality operator always considers operands of different types to be different. 

Example.
    
     "hello" === "hello"; // true
     "hello" === "hola"; // false

      3 === 3; // true
      3 === 4; // false

      true === true; // true
      true === false; // false

      null === null; // true

9.How can the style/class of an element be changed? 
Ans.
    Another way to alter the style of an element is by changing its class attribute. class is a reserved word in JavaScript, 
    so in order to access the element's class, you use element. className .

10.How to read and write a file using JavaScript? 
Ans.
    There are two ways to do it:

     1. Using JavaScript extensions (runs from JavaScript Editor), or

     2. Using a web page and ActiveX objects (Internet Explorer only)

     In JavaScript Extensions, you can use
     fh = fopen(getScriptPath(), 0); to open a file

     Using ActiveX objects, following should be included in your code to read a file:
     var fso = new ActiveXObject("Scripting.FileSystemObject");
     var s = fso.OpenTextFile("C:\\example.txt", 1, true);

11.What are all the looping structures in JavaScript? 
Ans.
    Loops are handy, if you want to run the same code over and over again, each time with a different value.

  JavaScript supports different kinds of loops:

       for - loops through a block of code a number of times
       for/in - loops through the properties of an object
       for/of - loops through the values of an iterable object
       while - loops through a block of code while a specified condition is true
       do/while - also loops through a block of code while a specified condition is true


12.How can you convert the string of any base to an integer in JavaScript? 
Ans.
    To convert a string to an integer parseInt(), Number(), and Unary operator(+) function is used in javascript.
    parseInt() function returns Nan( not a number) when the string doesn't contain number.
    If a string with a number is sent, then only that number will be returned as the output. This function won't accept spaces.

13.What is the function of the delete operator? 
Ans.
    The delete operator removes a given property from an object. 
    On successful deletion, it will return true , else false will be returned.


14.What are all the types of Pop up boxes available in JavaScript?
Ans.
    JavaScript has three kind of popup boxes: Alert box, Confirm box, and Prompt box.

15.What are the disadvantages of using innerHTML in JavaScript?
Ans.
    Disadvantages of innerHTML:-
    > Event handlers attached to any DOM element are preserved.
    > Replacement is done everywhere.
    > It is not possible to append innerHTML.
    > Breaks the document.
    > Used for Cross-site Scripting.